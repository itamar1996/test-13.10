openapi: 3.0.0
info:
  title: My API
  version: 1.0.0
  description: A sample API for demonstration

servers:
  - url: http://localhost:3001/api

paths:
  /auth/login:
    post:
      summary: Authenticate a user
      tags: 
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - password
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Authentication successful
        '400':
          description: Invalid credentials

  /auth/logout:
    delete:
      summary: Logout a user
      tags: 
        - Auth
      responses:
        '200':
          description: Logout successful
        '500':
          description: Server error during logout

  /students:
    post:
      summary: Register a student
      tags: 
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - email
                - password
                - classname
              properties:
                username:
                  type: string
                password:
                  type: string
                email:
                  type: string
                classname:
                  type: string
      responses:
        '200':
          description: Student registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        '400':
          description: Invalid input data

  /teacher:
    post:
      summary: Register a teacher
      tags: 
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - username
                - email
                - password
                - classname
              properties:
                username:
                  type: string
                password:
                  type: string
                email:
                  type: string
                classname:
                  type: string
      responses:
        '200':
          description: Teacher registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        '400':
          description: Invalid input data

    get:
      summary: Get all teachers
      tags: 
        - Auth
      responses:
        '200':
          description: List of teachers retrieved successfully
        '400':
          description: Invalid input data

    /teacher/grades/avg:
    get:
      summary: Get average grade for a teacher
      tags: 
        - Auth
      responses:
        '200':
          description: Average grade retrieved successfully
        '400':
          description: Invalid input data


  /teacher/grades/{id}:
    get:
      summary: Get a teacher by ID
      parameters:
        - in: path
          name: id
          schema:
            type: string
          required: true
          description: Numeric ID of the teacher to get
      responses:
        '200':
          description: Teacher retrieved successfully
        '400':
          description: Invalid input data


  /teacher/grades:
    post:
      summary: Add a grade for a student
      tags: 
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - studentId
                - testName
                - grade
              properties:
                studentId:
                  type: string
                testName:
                  type: string
                grade:
                  type: number
      responses:
        '200':
          description: Grade added successfully
        '400':
          description: Invalid input data
        '404':
          description: Student not found

    get:
      summary: Get grades for a class
      tags: 
        - Auth
      responses:
        '200':
          description: Grades retrieved successfully
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  # Define properties of the grade object
        '400':
          description: Invalid input data
